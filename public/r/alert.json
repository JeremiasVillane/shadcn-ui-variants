{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "alert",
  "type": "registry:ui",
  "title": "Alert",
  "description": "Alert component with variants and styles for different statuses.",
  "files": [
    {
      "path": "components/ui/alert.tsx",
      "content": "import * as React from \"react\"\nimport { cva } from \"class-variance-authority\"\nimport { CheckCircle2, CircleAlert, CircleX, InfoIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface AlertProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** @default \"default\" */\n  variant?: \"default\" | \"destructive\" | \"success\" | \"warning\" | \"info\"\n  /** @default \"outline\" */\n  styleVariant?: \"outline\" | \"fill\" | \"bootstrap\"\n  /** @default false */\n  withIcon?: boolean\n  customIcon?: React.ReactElement\n}\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4\",\n  {\n    variants: {\n      variant: {\n        default: \"[&>svg]:text-foreground\",\n        destructive: \"text-destructive [&>svg]:text-destructive\",\n        success: \"text-emerald-600 [&>svg]:text-emerald-600\",\n        warning: \"text-amber-500 [&>svg]:text-amber-500\",\n        info: \"text-cyan-600 [&>svg]:text-cyan-600\"\n      },\n      styleVariant: {\n        outline: \"bg-background\",\n        fill: \"border-transparent\",\n        bootstrap: \"border\"\n      }\n    },\n    compoundVariants: [\n      {\n        variant: \"default\",\n        styleVariant: \"outline\",\n        className: \"text-foreground\"\n      },\n      {\n        variant: \"default\",\n        styleVariant: \"fill\",\n        className: \"bg-foreground text-background [&>svg]:text-background\"\n      },\n      {\n        variant: \"default\",\n        styleVariant: \"bootstrap\",\n        className:\n          \"bg-muted text-foreground/80 [&>svg]:text-foreground/80 dark:text-white dark:[&>svg]:text-white border-muted-foreground/30\"\n      },\n      {\n        variant: \"destructive\",\n        styleVariant: \"outline\",\n        className: \"border-destructive/50 dark:border-destructive\"\n      },\n      {\n        variant: \"destructive\",\n        styleVariant: \"fill\",\n        className:\n          \"bg-destructive text-destructive-foreground [&>svg]:text-destructive-foreground\"\n      },\n      {\n        variant: \"destructive\",\n        styleVariant: \"bootstrap\",\n        className:\n          \"bg-destructive/10 dark:bg-destructive/20 border-destructive/50 dark:border-destructive/70 dark:text-white\"\n      },\n\n      {\n        variant: \"success\",\n        styleVariant: \"outline\",\n        className: \"border-emerald-600/50 dark:border-emerald-600\"\n      },\n      {\n        variant: \"success\",\n        styleVariant: \"fill\",\n        className: \"bg-emerald-600 text-white [&>svg]:text-white\"\n      },\n      {\n        variant: \"success\",\n        styleVariant: \"bootstrap\",\n        className:\n          \"bg-emerald-500/10 dark:bg-emerald-600/30 border-emerald-300 dark:border-emerald-600/70 text-emerald-500 dark:text-white [&>svg]:text-emerald-500\"\n      },\n\n      {\n        variant: \"warning\",\n        styleVariant: \"outline\",\n        className: \"border-amber-500/50 dark:border-amber-500\"\n      },\n      {\n        variant: \"warning\",\n        styleVariant: \"fill\",\n        className: \"bg-amber-500 text-white [&>svg]:text-white\"\n      },\n      {\n        variant: \"warning\",\n        styleVariant: \"bootstrap\",\n        className:\n          \"bg-amber-500/10 dark:bg-amber-600/30 border-amber-300 dark:border-amber-600/70 text-amber-500 dark:text-white [&>svg]:text-amber-500\"\n      },\n      {\n        variant: \"info\",\n        styleVariant: \"outline\",\n        className: \"border-cyan-600/50 dark:border-cyan-600\"\n      },\n      {\n        variant: \"info\",\n        styleVariant: \"fill\",\n        className: \"bg-cyan-600 text-white [&>svg]:text-white\"\n      },\n      {\n        variant: \"info\",\n        styleVariant: \"bootstrap\",\n        className:\n          \"bg-blue-500/10 dark:bg-blue-600/30 border-blue-300 dark:border-blue-600/70 text-blue-500 dark:text-white [&>svg]:text-blue-500\"\n      }\n    ],\n    defaultVariants: {\n      variant: \"default\",\n      styleVariant: \"outline\"\n    }\n  }\n)\n\nconst variantIcons = {\n  default: <InfoIcon className=\"size-4\" />,\n  destructive: <CircleX className=\"size-4\" />,\n  success: <CheckCircle2 className=\"size-4\" />,\n  warning: <CircleAlert className=\"size-4\" />,\n  info: <InfoIcon className=\"size-4\" />\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(\n  (\n    {\n      className,\n      variant = \"default\",\n      styleVariant = \"outline\",\n      withIcon = false,\n      customIcon,\n      children,\n      ...props\n    },\n    ref\n  ) => (\n    <div\n      ref={ref}\n      role=\"alert\"\n      className={cn(\n        alertVariants({ variant, styleVariant }),\n        styleVariant === \"bootstrap\"\n          ? withIcon\n            ? \"flex items-baseline gap-2 pl-10 [&>svg]:translate-y-[2px]\"\n            : \"flex items-baseline gap-2 pl-4\"\n          : withIcon\n            ? \"[&>svg+div]:translate-y-[-3px] [&>svg~*]:pl-7\"\n            : \"pl-5\",\n        className\n      )}\n      {...props}\n    >\n      {withIcon && (customIcon ?? variantIcons[variant ?? \"default\"])}\n      {children}\n    </div>\n  )\n)\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertDescription, AlertTitle }\nexport type { AlertProps }\n",
      "type": "registry:ui"
    }
  ]
}