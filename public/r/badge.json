{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:ui",
  "title": "Badge",
  "description": "The Badge component is a versatile, customizable element used to highlight and categorize content. It's perfect for displaying status, labels, counts, or tags in your application.",
  "files": [
    {
      "path": "components/ui/badge.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface BadgeProps {\n  /** Controls the visual style of the badge\n   * @default \"default\" */\n  // prettier-ignore\n  variant?: \"default\" | \"secondary\" | \"destructive\" | \"success\" | \"warning\" | \"info\" | \"outline\";\n\n  /** Determines the size of the badge\n   * @default \"sm\" */\n  size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"\n\n  /** Controls the border radius of the badge\n   * @default \"pill\" */\n  shape?: \"base\" | \"tag\" | \"rounded\" | \"square\" | \"pill\" | \"circle\"\n\n  /** Element to display as an icon to the left. */\n  leftElement?: React.ReactElement\n\n  /** Element to display as an icon to the right. */\n  rightElement?: React.ReactElement\n\n  /** If true, disable any interactive element rendered as `leftElement` or `rightElement`\n   * @default false */\n  disabled?: boolean\n}\n\nconst badgeVariants = cva(\n  \"inline-flex items-center border px-2.5 py-0.5 font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 cursor-default select-none text-nowrap w-fit\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        success:\n          \"border-transparent bg-emerald-600 text-white hover:bg-emerald-600/80\",\n        warning:\n          \"border-transparent bg-amber-600 text-white hover:bg-amber-600/80\",\n        info: \"border-transparent bg-blue-600 text-white hover:bg-blue-600/80\",\n        outline: \"text-foreground\"\n      },\n      size: {\n        xs: \"text-xs h-5 px-2\",\n        sm: \"text-xs h-6\",\n        md: \"text-sm h-8\",\n        lg: \"text-base h-9 px-3\",\n        xl: \"text-lg h-10 px-4\"\n      },\n      shape: {\n        base: \"rounded-sm\",\n        tag: \"rounded-md\",\n        rounded: \"rounded-lg\",\n        square: \"rounded-none\",\n        pill: \"rounded-full\",\n        circle:\n          \"rounded-full p-0 flex items-center justify-center overflow-hidden\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"sm\",\n      shape: \"pill\"\n    },\n    compoundVariants: [\n      { size: \"xs\", shape: \"circle\", className: \"size-3\" },\n      { size: \"sm\", shape: \"circle\", className: \"size-4\" },\n      { size: \"md\", shape: \"circle\", className: \"size-5\" },\n      { size: \"lg\", shape: \"circle\", className: \"size-6\" },\n      { size: \"xl\", shape: \"circle\", className: \"size-7\" }\n    ]\n  }\n)\n\nconst iconVariants = cva(\"shrink-0\", {\n  variants: {\n    badgeSize: {\n      xs: \"size-3\",\n      sm: \"size-3\",\n      md: \"size-4\",\n      lg: \"size-5\",\n      xl: \"size-6\"\n    },\n    side: {\n      left: \"\",\n      right: \"\"\n    }\n  },\n  compoundVariants: [\n    { badgeSize: \"xs\", side: \"left\", className: \"mr-0.5\" },\n    { badgeSize: \"sm\", side: \"left\", className: \"mr-1\" },\n    { badgeSize: \"md\", side: \"left\", className: \"mr-1.5\" },\n    { badgeSize: \"lg\", side: \"left\", className: \"mr-2\" },\n    { badgeSize: \"xl\", side: \"left\", className: \"mr-2.5\" },\n\n    { badgeSize: \"xs\", side: \"right\", className: \"ml-0.5\" },\n    { badgeSize: \"sm\", side: \"right\", className: \"ml-1\" },\n    { badgeSize: \"md\", side: \"right\", className: \"ml-1.5\" },\n    { badgeSize: \"lg\", side: \"right\", className: \"ml-2\" },\n    { badgeSize: \"xl\", side: \"right\", className: \"ml-2.5\" }\n  ]\n})\n\nconst renderElement = (\n  iconElement: React.ReactElement | undefined,\n  badgeSize: NonNullable<BadgeProps[\"size\"]>,\n  side: \"left\" | \"right\"\n): React.ReactNode => {\n  if (!iconElement) {\n    return null\n  }\n  return React.cloneElement(iconElement as React.ReactElement<any>, {\n    className: cn(\n      iconVariants({ badgeSize, side }),\n      (iconElement.props as any).className\n    )\n  })\n}\n\nfunction Badge({\n  className,\n  variant,\n  size = \"sm\",\n  shape,\n  leftElement,\n  rightElement,\n  disabled,\n  children,\n  ...props\n}: BadgeProps &\n  Omit<React.HTMLAttributes<HTMLDivElement>, \"disabled\"> &\n  VariantProps<typeof badgeVariants>) {\n  return (\n    <div\n      {...props}\n      inert={disabled}\n      className={cn(\n        badgeVariants({ variant, size, shape }),\n        \"flex items-center\",\n        className,\n        disabled && \"opacity-60\"\n      )}\n    >\n      {renderElement(leftElement, size, \"left\")}\n      {children}\n      {renderElement(rightElement, size, \"right\")}\n    </div>\n  )\n}\n\nexport { Badge, badgeVariants, iconVariants }\nexport type { BadgeProps }\n",
      "type": "registry:ui"
    }
  ]
}